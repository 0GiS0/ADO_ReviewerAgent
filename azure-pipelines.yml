trigger: none

pr:
  branches:
    include:
      - main
      - develop
      - feature/*

pool:
  vmImage: ubuntu-latest

variables:
  - group: "GitHub Copilot CLI"
  - name: MODEL
    value: claude-sonnet-4
  - name: COPILOT_VERSION
    value: "latest"
  - name: ANALYSIS_DIR
    value: "$(Build.ArtifactStagingDirectory)/pr-analysis"
  - name: DIFF_FILE
    value: "$(Build.ArtifactStagingDirectory)/pr-diff.json"


steps:
  - bash: |
      echo "üìã Pull Request Information:"
      echo "  - Repository URI: $(System.PullRequest.SourceRepositoryUri)"
      echo "  - PR #: $(System.PullRequest.PullRequestId)"
      echo "  - Source Branch: $(System.PullRequest.SourceBranch)"
      echo "  - Target Branch: $(System.PullRequest.TargetBranch)"
      echo "  - Source Commit: $(System.PullRequest.SourceCommitId)"
      echo "  - Build Repository: $(Build.Repository.Uri)"
      echo "  - Build Commit: $(Build.SourceVersion)"
      echo ""
      echo "üìÅ Working directories:"
      echo "  - Analysis Dir: $(ANALYSIS_DIR)"
      echo "  - Diff File: $(DIFF_FILE)"
      echo "  - Comment File: $(COMMENT_FILE)"
      
    displayName: üìã Show PR Information

  - task: NodeTool@0
    inputs:
      versionSource: "spec"
      versionSpec: "22.x"     
    displayName: ‚öôÔ∏è Setup Node.js 22.x

  - bash: |
      NPM_PREFIX=$(npm config get prefix)
      echo "##vso[task.setvariable variable=NPM_GLOBAL_PATH]${NPM_PREFIX}/lib/node_modules"
      echo "NPM global path: ${NPM_PREFIX}/lib/node_modules"
    displayName: üîç Detect NPM Global Path

  - task: Cache@2
    inputs:
      key: 'npm-global | "$(Agent.OS)" | "copilot" | "$(COPILOT_VERSION)"'
      path: $(NPM_GLOBAL_PATH)
      restoreKeys: |
        npm-global | "$(Agent.OS)" | "copilot"
    displayName: üì¶ Cache Global NPM Packages

  - bash: |
      if ! command -v copilot &> /dev/null; then
        echo "Installing @github/copilot..."
        npm install -g @github/copilot
      else
        echo "‚úÖ @github/copilot already installed (from cache)"
        copilot --version
      fi
    displayName: üì¶ Install Copilot CLI  

  - template: templates/run-script.yml
    parameters:
      script: get-pr-diff.sh
      args: '"$(System.PullRequest.SourceRepositoryUri)" "$(System.PullRequest.SourceBranch)" "$(System.PullRequest.TargetBranch)" "$(AZURE_DEVOPS_EXT_PAT)" "$(DIFF_FILE)"'
      displayName: üîç Get PR Differences

  - template: templates/run-script.yml
    parameters:
      script: download-pr-files.sh
      args: '"$(DIFF_FILE)" "$(System.PullRequest.SourceRepositoryUri)" "$(System.PullRequest.SourceBranch)" "$(System.PullRequest.TargetBranch)" "$(AZURE_DEVOPS_EXT_PAT)" "$(ANALYSIS_DIR)"'
      displayName: üìÅ Download Modified Files

  - template: templates/run-script.yml
    parameters:
      script: analyze-with-copilot.sh
      args: '"$(ANALYSIS_DIR)/source"'
      displayName: ü§ñ Analyze with GitHub Copilot CLI
      workingDirectory: $(System.DefaultWorkingDirectory)

  - bash: |
      # Extract repository information
      REPO_URI="$(System.PullRequest.SourceRepositoryUri)"
      ORG=$(echo "$REPO_URI" | sed 's|https://[^@]*@||' | awk -F'/' '{print $2}')
      PROJECT=$(echo "$REPO_URI" | sed 's|https://[^@]*@||' | awk -F'/' '{print $3}' | sed 's/%20/ /g' | sed 's/ /%20/g')
      REPO=$(echo "$REPO_URI" | sed 's|https://[^@]*@||' | awk -F'/' '{print $5}')
      PR_ID="$(System.PullRequest.PullRequestId)"
      
      echo "üîç Repository information:"
      echo "  - Organization: $ORG"
      echo "  - Project: $PROJECT"
      echo "  - Repository: $REPO"
      echo "  - PR ID: $PR_ID"
      
      echo "##vso[task.setvariable variable=PR_ORG]$ORG"
      echo "##vso[task.setvariable variable=PR_PROJECT]$PROJECT"
      echo "##vso[task.setvariable variable=PR_REPO]$REPO"
      echo "##vso[task.setvariable variable=PR_NUM]$PR_ID"
    displayName: üìã Extract PR Info

  - template: templates/run-script.yml
    parameters:
      script: post-pr-comment.sh
      args: '"$(ANALYSIS_DIR)/source/pr-comments" "$(PR_ORG)" "$(PR_PROJECT)" "$(PR_REPO)" "$(PR_NUM)" "$(AZURE_DEVOPS_EXT_PAT)"'
      displayName: üí¨ Publish Comment on PR

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "pr-analysis-complete"
      publishLocation: "Container"
    displayName: üì¶ Publish Complete Analysis as Artifact
