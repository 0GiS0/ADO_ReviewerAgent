# Pipeline Simplificada - Obtener Diferencias de PR
trigger: none

pr:
  branches:
    include:
      - main
      - develop
      - feature/*

pool:
  vmImage: ubuntu-latest

variables:
  - name: DIFF_OUTPUT
    value: "$(Build.ArtifactStagingDirectory)/pr-diff.txt"

steps:
  - script: echo "🚀 Iniciando pipeline para obtener diferencias del PR"
    displayName: 🚀 Inicio

  - bash: |
      echo "📋 Información del Pull Request:"
      echo "  - Repository URI: $(System.PullRequest.SourceRepositoryUri)"
      echo "  - PR #: $(System.PullRequest.PullRequestId)"
      echo "  - Source Branch: $(System.PullRequest.SourceBranch)"
      echo "  - Target Branch: $(System.PullRequest.TargetBranch)"
      echo "  - Source Commit: $(System.PullRequest.SourceCommitId)"
      echo "  - Target Commit: $(System.PullRequest.TargetCommitId)"
      echo ""
      
      # Extraer el nombre del repositorio fuente
      SOURCE_REPO_URI="$(System.PullRequest.SourceRepositoryUri)"
      if [ -n "$SOURCE_REPO_URI" ]; then
        SOURCE_REPO_NAME=$(echo "$SOURCE_REPO_URI" | sed 's|.*/||')
        echo "  - Repositorio fuente: $SOURCE_REPO_NAME"
        echo "##vso[task.setvariable variable=SOURCE_REPO_NAME]$SOURCE_REPO_NAME"
      else
        echo "❌ ERROR: System.PullRequest.SourceRepositoryUri está vacío"
        exit 1
      fi
    displayName: 📋 Mostrar Información del PR

  - bash: |
      echo "📥 Clonando el repositorio fuente..."
      
      # Clonar el repositorio fuente
      SOURCE_REPO_URI="$(System.PullRequest.SourceRepositoryUri)"
      
      # Configurar autenticación para el clone
      if [ -n "$AZURE_DEVOPS_EXT_PAT" ]; then
        # Usar PAT si está disponible
        AUTH_URI=$(echo "$SOURCE_REPO_URI" | sed "s|https://|https://:$AZURE_DEVOPS_EXT_PAT@|")
      else
        # Usar System.AccessToken
        AUTH_URI=$(echo "$SOURCE_REPO_URI" | sed "s|https://|https://:$(System.AccessToken)@|")
      fi
      
      echo "Clonando desde: $SOURCE_REPO_URI"
      git clone "$AUTH_URI" source-repo
      cd source-repo
      
      echo "✅ Repositorio clonado exitosamente"
      echo "📋 Branches disponibles:"
      git branch -a
      
      echo "📋 Información del repositorio:"
      echo "  - Commit actual: $(git rev-parse HEAD)"
      echo "  - Branch actual: $(git branch --show-current)"
    displayName: � Clonar Repositorio Fuente
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
      AZURE_DEVOPS_EXT_PAT: $(AZURE_DEVOPS_EXT_PAT)

  - bash: |
      cd source-repo
      
      echo "🔍 Obteniendo diferencias entre branches..."
      
      TARGET_BRANCH="$(System.PullRequest.TargetBranch)"
      SOURCE_BRANCH="$(System.PullRequest.SourceBranch)"
      
      # Remover prefijos refs/heads/ si existen
      TARGET_BRANCH_CLEAN=$(echo "$TARGET_BRANCH" | sed 's|refs/heads/||')
      SOURCE_BRANCH_CLEAN=$(echo "$SOURCE_BRANCH" | sed 's|refs/heads/||')
      
      echo "  - Target Branch: $TARGET_BRANCH_CLEAN"
      echo "  - Source Branch: $SOURCE_BRANCH_CLEAN"
      
      # Asegurarse de que tenemos los branches localmente
      git fetch origin "$TARGET_BRANCH_CLEAN" || echo "No se pudo hacer fetch del target branch"
      git fetch origin "$SOURCE_BRANCH_CLEAN" || echo "No se pudo hacer fetch del source branch"
      
      # Checkout al source branch
      git checkout "$SOURCE_BRANCH_CLEAN" || git checkout -b "$SOURCE_BRANCH_CLEAN" "origin/$SOURCE_BRANCH_CLEAN"
      
      echo ""
      echo "📊 Archivos modificados:"
      git diff --name-only "origin/$TARGET_BRANCH_CLEAN"..."$SOURCE_BRANCH_CLEAN" | head -20
      
      echo ""
      echo "� Generando diff completo..."
      git diff "origin/$TARGET_BRANCH_CLEAN"..."$SOURCE_BRANCH_CLEAN" > "$(DIFF_OUTPUT)"
      
      # Mostrar estadísticas
      echo ""
      echo "📊 Estadísticas del diff:"
      echo "  - Líneas en el diff: $(wc -l < "$(DIFF_OUTPUT)")"
      echo "  - Tamaño del archivo: $(du -h "$(DIFF_OUTPUT)" | cut -f1)"
      
      # Mostrar las primeras líneas del diff
      echo ""
      echo "📋 Primeras 50 líneas del diff:"
      head -50 "$(DIFF_OUTPUT)"
      
      echo ""
      echo "✅ Diff generado exitosamente en: $(DIFF_OUTPUT)"
    displayName: 🔍 Obtener Diferencias del PR

  - bash: |
      echo "📄 Resumen del análisis:"
      echo "  - Archivo de diferencias: $(DIFF_OUTPUT)"
      if [ -f "$(DIFF_OUTPUT)" ]; then
        echo "  - Tamaño: $(du -h "$(DIFF_OUTPUT)" | cut -f1)"
        echo "  - Líneas: $(wc -l < "$(DIFF_OUTPUT)")"
        echo "✅ Diff generado correctamente"
      else
        echo "❌ ERROR: No se generó el archivo de diferencias"
        exit 1
      fi
    displayName: 📄 Mostrar Resumen

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "pr-diff"
      publishLocation: "Container"
    displayName: 📦 Publicar Diff como Artefacto

  - bash: |
      echo "✅ Pipeline completada exitosamente"
      echo "📁 El diff está disponible en los artefactos como 'pr-diff'"
    displayName: ✅ Completado
