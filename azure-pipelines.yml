# Pipeline de Revisi√≥n de PR con GitHub Copilot
trigger: none

pr:
  branches:
    include:
      - main
      - develop
      - feature/*

pool:
  vmImage: ubuntu-latest

variables:
  - group: "GitHub Copilot CLI"
  - name: REVIEW_OUTPUT
    value: "$(Build.ArtifactStagingDirectory)/review-report.md"
  - name: COPILOT_VERSION
    value: "0.0.339"
  - name: MODEL
    value: claude-sonnet-4

steps:
  - script: echo "üöÄ PR Review pipeline started!"
    displayName: üöÄ Start Pipeline

  - checkout: self
    fetchDepth: "0"
    persistCredentials: "true"
    displayName: üì• Checkout Code

  - task: NodeTool@0
    inputs:
      versionSource: "spec"
      versionSpec: "22.x"
    displayName: ‚öôÔ∏è Setup Node.js 22.x

  - bash: |
      NPM_PREFIX=$(npm config get prefix)
      echo "##vso[task.setvariable variable=NPM_GLOBAL_PATH]${NPM_PREFIX}/lib/node_modules"
      echo "NPM global path: ${NPM_PREFIX}/lib/node_modules"
    displayName: üîç Detect NPM Global Path

  - task: Cache@2
    inputs:
      key: 'npm-global | "$(Agent.OS)" | "copilot" | "$(COPILOT_VERSION)"'
      path: $(NPM_GLOBAL_PATH)
      restoreKeys: |
        npm-global | "$(Agent.OS)" | "copilot"
    displayName: üì¶ Cache Global NPM Packages

  - bash: |
      if ! command -v copilot &> /dev/null; then
        echo "Installing @github/copilot..."
        npm install -g @github/copilot
      else
        echo "‚úÖ @github/copilot already installed (from cache)"
        copilot --version
      fi
    displayName: üì¶ Install Copilot CLI

  - template: templates/run-script.yml
    parameters:
      script: get-changed-files.sh
      displayName: üìã Get Changed Files
      env:
        SYSTEM_PULLREQUEST_TARGETBRANCH: $(System.PullRequest.TargetBranch)
        SYSTEM_PULLREQUEST_SOURCEBRANCH: $(System.PullRequest.SourceBranch)
        SYSTEM_PULLREQUEST_SOURCECOMMITID: $(System.PullRequest.SourceCommitId)
        SYSTEM_PULLREQUEST_TARGETCOMMITID: $(System.PullRequest.TargetCommitId)
        BUILD_ARTIFACTSTAGINGDIRECTORY: $(Build.ArtifactStagingDirectory)

  - template: templates/run-script.yml
    parameters:
      script: analyze-changes.sh
      displayName: üîç Analyze Changes with Copilot
      env:
        SYSTEM_PULLREQUEST_TARGETBRANCH: $(System.PullRequest.TargetBranch)
        SYSTEM_PULLREQUEST_SOURCEBRANCH: $(System.PullRequest.SourceBranch)
        SYSTEM_PULLREQUEST_PULLREQUESTID: $(System.PullRequest.PullRequestId)
        SYSTEM_PULLREQUEST_SOURCECOMMITID: $(System.PullRequest.SourceCommitId)
        SYSTEM_PULLREQUEST_TARGETCOMMITID: $(System.PullRequest.TargetCommitId)
        BUILD_ARTIFACTSTAGINGDIRECTORY: $(Build.ArtifactStagingDirectory)
        REVIEW_OUTPUT: $(REVIEW_OUTPUT)

  - bash: |
      echo "=== REPORTE DE REVISI√ìN ==="
      cat $(REVIEW_OUTPUT)
      echo "==========================="
    displayName: üìÑ Show Report

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "copilot-review"
      publishLocation: "Container"
    displayName: üì¶ Publish Report as Artifact

  - template: templates/run-script.yml
    parameters:
      script: post-pr-comment.sh
      args: '"$(REVIEW_OUTPUT)" "$(System.CollectionUri)" "$(System.TeamProject)" "$(Build.Repository.ID)" "$(System.PullRequest.PullRequestId)"'
      displayName: üí¨ Post Summary Comment
      env:
        AZURE_DEVOPS_EXT_PAT: $(AZURE_DEVOPS_EXT_PAT)

  - template: templates/run-script.yml
    parameters:
      script: post-recommendations.sh
      args: '"./logs/copilot_recommendations.md" "$(System.CollectionUri)" "$(System.TeamProject)" "$(Build.Repository.ID)" "$(System.PullRequest.PullRequestId)"'
      displayName: üí¨ Post Individual Recommendations
      env:
        AZURE_DEVOPS_EXT_PAT: $(AZURE_DEVOPS_EXT_PAT)

  - bash: |
      echo "‚úÖ PR Review completed successfully"
      echo "üìä Review report available in artifacts"
      echo "üí¨ Comments posted to PR #$(System.PullRequest.PullRequestId)"
    displayName: ‚úÖ Complete
    condition: succeeded()
