# Pipeline Simplificada - Obtener Diferencias de PR
# IMPORTANTE: Debes crear una variable secreta llamada 'AZURE_DEVOPS_EXT_PAT' 
# en la configuraci√≥n del pipeline con tu Personal Access Token
trigger: none

pr:
  branches:
    include:
      - main
      - develop
      - feature/*

pool:
  vmImage: ubuntu-latest

variables:
  - name: DIFF_OUTPUT
    value: "$(Build.ArtifactStagingDirectory)/pr-diff.txt"

steps:
  - script: echo "üöÄ Iniciando pipeline para obtener diferencias del PR"
    displayName: üöÄ Inicio

  - bash: |
      echo "üìã Informaci√≥n del Pull Request:"
      echo "  - Repository URI: $(System.PullRequest.SourceRepositoryUri)"
      echo "  - PR #: $(System.PullRequest.PullRequestId)"
      echo "  - Source Branch: $(System.PullRequest.SourceBranch)"
      echo "  - Target Branch: $(System.PullRequest.TargetBranch)"
      echo "  - Source Commit: $(System.PullRequest.SourceCommitId)"
      echo "  - Build Repository: $(Build.Repository.Uri)"
      echo "  - Build Commit: $(Build.SourceVersion)"
      echo ""      
      
    displayName: üìã Mostrar Informaci√≥n del PR

  - bash: |
      echo "üåê Ejecutando script get-pr-diff.sh..."
      
      # Debug: Mostrar informaci√≥n de las variables
      echo "üîç Debug - Variables disponibles:"
      echo "  - PWD: $(pwd)"
      echo "  - AZURE_DEVOPS_EXT_PAT length: ${#AZURE_DEVOPS_EXT_PAT}"
      echo "  - Source URI: $(System.PullRequest.SourceRepositoryUri)"
      echo "  - Source Branch: $(System.PullRequest.SourceBranch)"
      echo "  - Target Branch: $(System.PullRequest.TargetBranch)"
      echo "  - Output File: $(DIFF_OUTPUT).json"
      
      # Verificar que el script existe
      if [ ! -f "./scripts/get-pr-diff.sh" ]; then
        echo "‚ùå ERROR: Script get-pr-diff.sh no encontrado"
        ls -la ./scripts/
        exit 1
      fi
      
      # Verificar que el PAT est√© disponible
      if [ -z "$AZURE_DEVOPS_EXT_PAT" ]; then
        echo "‚ùå ERROR: AZURE_DEVOPS_EXT_PAT no est√° configurado"
        echo "üìù SOLUCI√ìN: Crea una variable secreta llamada 'AZURE_DEVOPS_EXT_PAT' en el pipeline"
        echo "   1. Ve a Pipeline > Edit > Variables"
        echo "   2. Agrega nueva variable: AZURE_DEVOPS_EXT_PAT"
        echo "   3. Marca como 'Keep this value secret'"
        echo "   4. Ingresa tu Personal Access Token"
        exit 1
      fi
      
      # Debug adicional del PAT (sin mostrar valor real)
      echo "üîç PAT verificado - longitud: ${#AZURE_DEVOPS_EXT_PAT} caracteres"
      
      echo "‚úÖ Todas las verificaciones pasaron, ejecutando script..."
      
      # Ejecutar el script directamente con los par√°metros
      echo "üìã Comando a ejecutar:"
      echo "./scripts/get-pr-diff.sh \"$(System.PullRequest.SourceRepositoryUri)\" \"$(System.PullRequest.SourceBranch)\" \"$(System.PullRequest.TargetBranch)\" \"[PAT_HIDDEN]\" \"$(DIFF_OUTPUT).json\""
      
      ./scripts/get-pr-diff.sh \
        "$(System.PullRequest.SourceRepositoryUri)" \
        "$(System.PullRequest.SourceBranch)" \
        "$(System.PullRequest.TargetBranch)" \
        "$(AZURE_DEVOPS_EXT_PAT)" \
        "$(DIFF_OUTPUT).json"
      
      SCRIPT_EXIT_CODE=$?
      echo "üìä Script termin√≥ con c√≥digo: $SCRIPT_EXIT_CODE"
      
      if [ $SCRIPT_EXIT_CODE -ne 0 ]; then
        echo "‚ùå ERROR: El script get-pr-diff.sh fall√≥ con c√≥digo $SCRIPT_EXIT_CODE"
        exit 1
      fi
      
      # Verificar que se cre√≥ el archivo de salida
      if [ -f "$(DIFF_OUTPUT).json" ]; then
        echo "‚úÖ Archivo JSON creado exitosamente: $(DIFF_OUTPUT).json"
        echo "üìä Tama√±o: $(du -h "$(DIFF_OUTPUT).json" | cut -f1)"
      else
        echo "‚ùå ERROR: No se cre√≥ el archivo JSON esperado"
        exit 1
      fi
      
    displayName: üåê Obtener Diferencias usando Azure DevOps API
    env:
      AZURE_DEVOPS_EXT_PAT: $(AZURE_DEVOPS_EXT_PAT)

  - bash: |
      echo "üìù Procesando respuesta para el pipeline..."
      
      # Verificar que el archivo JSON se haya creado
      if [ ! -f "$(DIFF_OUTPUT).json" ]; then
        echo "‚ùå ERROR: No se encontr√≥ el archivo de respuesta JSON"
        exit 1
      fi

      
      # Crear un resumen legible del diff
      echo "üìä Resumen del diff generado por Azure DevOps API" > "$(DIFF_OUTPUT)"
      echo "Fecha: $(date)" >> "$(DIFF_OUTPUT)"
      echo "PR #: $(System.PullRequest.PullRequestId)" >> "$(DIFF_OUTPUT)"
      echo "Source: $(System.PullRequest.SourceBranch) -> Target: $(System.PullRequest.TargetBranch)" >> "$(DIFF_OUTPUT)"
      echo "" >> "$(DIFF_OUTPUT)"
      
      # Agregar estad√≠sticas si jq est√° disponible
      if command -v jq &> /dev/null && [ -f "$(DIFF_OUTPUT).json" ]; then
        if jq empty "$(DIFF_OUTPUT).json" 2>/dev/null; then
          echo "üìä Estad√≠sticas de cambios:" >> "$(DIFF_OUTPUT)"
          echo "  - Total: $(jq '.changes | length' "$(DIFF_OUTPUT).json" 2>/dev/null || echo 'N/A')" >> "$(DIFF_OUTPUT)"
          echo "  - A√±adidos: $(jq '.changeCounts.Add // 0' "$(DIFF_OUTPUT).json" 2>/dev/null || echo '0')" >> "$(DIFF_OUTPUT)"
          echo "  - Editados: $(jq '.changeCounts.Edit // 0' "$(DIFF_OUTPUT).json" 2>/dev/null || echo '0')" >> "$(DIFF_OUTPUT)"
          echo "  - Eliminados: $(jq '.changeCounts.Delete // 0' "$(DIFF_OUTPUT).json" 2>/dev/null || echo '0')" >> "$(DIFF_OUTPUT)"
          echo "" >> "$(DIFF_OUTPUT)"
          
          echo "üìÅ Archivos modificados:" >> "$(DIFF_OUTPUT)"
          jq -r '.changes[]?.item?.path // empty' "$(DIFF_OUTPUT).json" 2>/dev/null >> "$(DIFF_OUTPUT)"
          echo "" >> "$(DIFF_OUTPUT)"
          
          echo "üîç Detalles de cambios:" >> "$(DIFF_OUTPUT)"
          jq -r '.changes[]? | "- \(.item.path // "unknown") (\(.changeType // "unknown"))"' "$(DIFF_OUTPUT).json" 2>/dev/null >> "$(DIFF_OUTPUT)"
        else
          echo "‚ö†Ô∏è  JSON inv√°lido - guardando respuesta completa" >> "$(DIFF_OUTPUT)"
          cat "$(DIFF_OUTPUT).json" >> "$(DIFF_OUTPUT)"
        fi
      else
        echo "‚ö†Ô∏è  jq no disponible - guardando respuesta JSON" >> "$(DIFF_OUTPUT)"
        cat "$(DIFF_OUTPUT).json" >> "$(DIFF_OUTPUT)"
      fi
      
      echo "‚úÖ Diff procesado y guardado en: $(DIFF_OUTPUT)"
      
    displayName: üìù Procesar Respuesta de la API

  - bash: |
      echo "üìÑ Resumen del an√°lisis usando API REST:"
      echo "  - Archivo JSON de la API: $(DIFF_OUTPUT).json"
      echo "  - Archivo de diferencias procesado: $(DIFF_OUTPUT)"
      
      if [ -f "$(DIFF_OUTPUT)" ]; then
        echo "  - Tama√±o del diff: $(du -h "$(DIFF_OUTPUT)" | cut -f1)"
        echo "  - L√≠neas: $(wc -l < "$(DIFF_OUTPUT)")"
        echo "‚úÖ Diff generado correctamente usando API REST"
        
        echo ""
        echo "üìã Primeras l√≠neas del diff:"
        head -20 "$(DIFF_OUTPUT)"
      else
        echo "‚ùå ERROR: No se gener√≥ el archivo de diferencias"
        exit 1
      fi
      
      if [ -f "$(DIFF_OUTPUT).json" ]; then
        echo ""
        echo "üìä Tama√±o de la respuesta JSON: $(du -h "$(DIFF_OUTPUT).json" | cut -f1)"
      fi
    displayName: üìÑ Mostrar Resumen de API

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "pr-diff"
      publishLocation: "Container"
    displayName: üì¶ Publicar Diff como Artefacto

  - bash: |
      echo "‚úÖ Pipeline completada exitosamente"
      echo "üìÅ El diff est√° disponible en los artefactos como 'pr-diff'"
    displayName: ‚úÖ Completado


