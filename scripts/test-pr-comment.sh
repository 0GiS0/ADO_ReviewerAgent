#!/bin/bash

# Test script to post a simple test comment to a PR
# Usage: ./test-pr-comment.sh <ORGANIZATION> <PROJECT> <REPOSITORY> <PR_ID> <PAT>

echo "🧪 TEST: Posting test comment to PR"
echo "=================================="

# Check parameters
if [ $# -ne 5 ]; then
    echo "❌ ERROR: Incorrect number of parameters"
    echo "Usage: $0 <ORGANIZATION> <PROJECT> <REPOSITORY> <PR_ID> <PAT>"
    echo ""
    echo "Example:"
    echo "$0 'returngisorg' 'GitHub Copilot CLI' 'Demo' '113' 'your-pat'"
    exit 1
fi

# Assign parameters
ORGANIZATION="$1"
PROJECT="$2"
REPOSITORY="$3"
PR_ID="$4"
PAT="$5"

echo "📋 Test Configuration:"
echo "  - Organization: $ORGANIZATION"
echo "  - Project: $PROJECT"
echo "  - Repository: $REPOSITORY"
echo "  - PR ID: $PR_ID"
echo ""

# Create a simple test comment
TEST_COMMENT="🤖 **PR Analysis Test Comment**

This is a test comment generated by the PR analysis pipeline to verify API connectivity and authentication.

**Test Details:**
- Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
- Pipeline Build: Test Run
- Status: Testing API connection

✅ If you can see this comment, the API integration is working correctly!"

echo "📝 Test comment created ($(echo "$TEST_COMMENT" | wc -c) characters)"

# Encode project name for URL
PROJECT_ENCODED=$(echo "$PROJECT" | sed 's/ /%20/g')

# Build API URL
API_URL="https://dev.azure.com/$ORGANIZATION/$PROJECT_ENCODED/_apis/git/repositories/$REPOSITORY/pullRequests/$PR_ID/threads?api-version=7.1"
echo "🔗 API URL: $API_URL"

# Escape content for JSON
ESCAPED_CONTENT=$(echo "$TEST_COMMENT" | sed 's/\\/\\\\/g' | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')

# Create JSON payload
PAYLOAD_FILE="/tmp/test-pr-comment-payload-$$.json"
cat > "$PAYLOAD_FILE" << EOF
{
  "comments": [
    {
      "parentCommentId": 0,
      "content": "$ESCAPED_CONTENT",
      "commentType": 1
    }
  ],
  "status": 1
}
EOF

echo "📊 Payload size: $(wc -c < "$PAYLOAD_FILE") bytes"

# Generate authentication header
AUTH_HEADER=$(printf "%s:" "$PAT" | base64)
echo "🔑 Auth header generated (length: ${#AUTH_HEADER} characters)"

# Test basic connectivity
echo ""
echo "🌐 Testing connectivity to Azure DevOps..."
CONNECTIVITY_TEST=$(curl -s -w "HTTPSTATUS:%{http_code}" -I "https://dev.azure.com/$ORGANIZATION" --connect-timeout 10)
CONNECT_CODE=$(echo "$CONNECTIVITY_TEST" | grep -o "HTTPSTATUS:[0-9]*" | cut -d: -f2)
echo "📡 Connectivity test: $CONNECT_CODE"

if [ "$CONNECT_CODE" != "200" ] && [ "$CONNECT_CODE" != "302" ]; then
    echo "⚠️  Connectivity test didn't return 200/302, but proceeding with API call..."
fi

# Make API call
echo ""
echo "🚀 Making test API call..."
HTTP_RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" \
  --connect-timeout 30 \
  --max-time 60 \
  -X POST \
  -H "Authorization: Basic $AUTH_HEADER" \
  -H "Content-Type: application/json" \
  -H "Accept: application/json" \
  -d @"$PAYLOAD_FILE" \
  "$API_URL")

# Parse response
HTTP_CODE=$(echo "$HTTP_RESPONSE" | grep -o "HTTPSTATUS:[0-9]*" | cut -d: -f2)
RESPONSE_BODY=$(echo "$HTTP_RESPONSE" | sed 's/HTTPSTATUS:[0-9]*$//')

echo "📡 HTTP Response Code: $HTTP_CODE"

# Clean up
rm -f "$PAYLOAD_FILE"

# Process response
case "$HTTP_CODE" in
    200|201)
        echo "✅ TEST PASSED: Comment posted successfully!"
        
        # Try to extract thread ID if jq is available
        if command -v jq &> /dev/null && echo "$RESPONSE_BODY" | jq empty 2>/dev/null; then
            THREAD_ID=$(echo "$RESPONSE_BODY" | jq -r '.id // "N/A"')
            COMMENT_ID=$(echo "$RESPONSE_BODY" | jq -r '.comments[0].id // "N/A"')
            echo "📌 Thread ID: $THREAD_ID"
            echo "💬 Comment ID: $COMMENT_ID"
        fi
        
        # Build PR URL
        PR_URL="https://dev.azure.com/$ORGANIZATION/$PROJECT_ENCODED/_git/$REPOSITORY/pullrequest/$PR_ID"
        echo ""
        echo "🔗 View comment at: $PR_URL"
        echo ""
        echo "🎉 API integration test completed successfully!"
        ;;
    400)
        echo "❌ TEST FAILED: Bad Request (400)"
        echo "Possible causes:"
        echo "  - Invalid JSON payload"
        echo "  - Missing required fields"
        echo "  - PR ID doesn't exist: $PR_ID"
        echo ""
        echo "📋 Response body (first 500 chars):"
        echo "$RESPONSE_BODY" | head -c 500
        exit 1
        ;;
    401)
        echo "❌ TEST FAILED: Unauthorized (401)"
        echo "Possible causes:"
        echo "  - PAT is invalid or expired"
        echo "  - PAT doesn't have required permissions"
        echo "  - Incorrect organization/project"
        exit 1
        ;;
    403)
        echo "❌ TEST FAILED: Forbidden (403)"
        echo "Possible causes:"
        echo "  - PAT lacks sufficient permissions"
        echo "  - User doesn't have access to repository"
        echo "  - Branch policies prevent comments"
        exit 1
        ;;
    404)
        echo "❌ TEST FAILED: Not Found (404)"
        echo "Possible causes:"
        echo "  - PR ID doesn't exist: $PR_ID"
        echo "  - Repository incorrect: $REPOSITORY"
        echo "  - Project incorrect: $PROJECT"
        echo "  - Organization incorrect: $ORGANIZATION"
        exit 1
        ;;
    000|"")
        echo "❌ TEST FAILED: No HTTP response (000 or empty)"
        echo "Possible causes:"
        echo "  - Network connectivity issues"
        echo "  - DNS resolution failure"
        echo "  - Curl command failed"
        echo "  - Timeout occurred"
        echo ""
        echo "🔍 Full response:"
        echo "$HTTP_RESPONSE"
        
        # Additional network tests
        echo ""
        echo "🌐 Additional network diagnostics:"
        if curl -s --connect-timeout 5 --head "https://httpbin.org/get" > /dev/null; then
            echo "✅ General internet connectivity: OK"
        else
            echo "❌ General internet connectivity: FAILED"
        fi
        
        if curl -s --connect-timeout 5 --head "https://dev.azure.com" > /dev/null; then
            echo "✅ Azure DevOps reachability: OK"
        else
            echo "❌ Azure DevOps reachability: FAILED"
        fi
        
        exit 1
        ;;
    *)
        echo "❌ TEST FAILED: Unexpected HTTP code: $HTTP_CODE"
        echo ""
        echo "📋 Response body:"
        echo "$RESPONSE_BODY"
        exit 1
        ;;
esac

echo ""
echo "🧪 Test completed successfully!"